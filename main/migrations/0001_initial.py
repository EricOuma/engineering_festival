# Generated by Django 3.0.2 on 2020-02-09 00:20

import cloudinary.models
import django.contrib.postgres.fields.citext
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Delegate',
            fields=[
                ('university', models.CharField(choices=[(None, 'Select'), ('KU', 'Kenyatta University'), ('JKUAT', 'JKUAT'), ('UoN', 'University of Nairobi'), ('MKU', 'Mount Kenya University'), ('RU', 'Riara University'), ('USIU', 'USIU'), ('KCA', 'KCA'), ('MMU', 'Multimedia University'), ('SU', 'Strathmore University')], max_length=5)),
                ('full_name', models.CharField(max_length=35)),
                ('email', django.contrib.postgres.fields.citext.CIEmailField(max_length=254, primary_key=True, serialize=False, validators=[django.core.validators.EmailValidator()])),
                ('phone_number', models.CharField(help_text='Please use the following format: <em>0712345678</em>.', max_length=12, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(12)])),
                ('reg_no', django.contrib.postgres.fields.citext.CICharField(max_length=20, unique=True)),
                ('mpesa_code', models.CharField(blank=True, help_text='Make sure to keep the mpesa message. It will be used to validate your code.', max_length=20, null=True, unique=True)),
                ('has_paid', models.BooleanField(default=False, editable=False, help_text='Make sure you have confirmed the MPESA code matches from the Safaricom message. For those who have lost the safaricom message, ask them to get an mpesa statement.')),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='LipaNaMpesa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_code', models.IntegerField(null=True)),
                ('result_desc', models.CharField(max_length=120, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=20, null=True)),
                ('transaction_date', models.DateTimeField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True)),
            ],
            options={
                'verbose_name_plural': 'LipaNaMpesa data',
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='eg <em>Mr, Dr, Prof...</em>.', max_length=35, null=True)),
                ('full_name', models.CharField(max_length=35)),
                ('role', models.CharField(blank=True, help_text='eg <em>CEO Google</em>.', max_length=100, null=True)),
                ('photo', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('logo', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
            ],
        ),
        migrations.CreateModel(
            name='SummitDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_number', models.CharField(blank=True, choices=[('1', 'ONE'), ('2', 'TWO'), ('3', 'THREE')], max_length=5, null=True)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('statement', models.TextField()),
                ('photo', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('who', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('description', models.TextField()),
                ('venue', models.CharField(max_length=30)),
                ('google_event_id', models.CharField(blank=True, max_length=40, null=True)),
                ('day', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.SummitDay')),
                ('speaker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Speaker')),
            ],
        ),
    ]
